
### Generated by Statocles version 0.086

# This is the site configuration file. The format is YAML, and the config is
# read by Beam::Wire, a dependency-injection library that builds complete
# objects. For full details on how to edit this file, see
# Statocles::Help::Config.
#
# This file contains configuration for objects. Each object has a name, like
# "site", "theme", or "blog_app". This name can be used to refer to the object
# later, for example, using "$ref: name".
#
# Every object has a "class". Developers can customize behavior by changing the
# class or creating their own classes. If you need help with an object, look at
# the class's documentation.
#
# Every object has "args", which are the object's attributes. See the class's
# documentation for a full list of attributes and what they do.
#
# Many objects have events. Event handlers can be configured using the "on"
# key. See the class's documentation for a list of possible events. Every
# event handler should have at least "$class" and a "$sub". "$class" is the
# plugin class. "$sub" is the plugin method to run. If necessary, you can
# add "$args" to configure the plugin object.

# site: This is the main site object. Site objects handle building and
# deploying, and store global site data like themes and navigation. See
# Statocles::Site for a full list of attributes and what they do.
site:
    class: 'Statocles::Site'

    args:

        # title: This is the title of the site, shown in the <title> tag
        title: 'Minimum Viable Perl'

        # base_url: This is the base URL the site will be deployed to. It
        # should be a full URL, and may contain a path, like:
        #
        #   http://example.com/username
        #
        # If the base_url contains a path, all internal links will be
        # rewritten appropriately.
        base_url: 'http://mvp.kablamo.org'

        # apps: These are the applications in this site. The name of the app,
        # "blog", "page", or "static", is used to refer to it in commands.
        apps:

            # blog: This is the blog app
            blog:
                $ref: 'blog_app'

            # page: This app turns any Markdown page into HTML
            page:
                $ref: 'page_app'

#            perldoc:
#                $ref: 'perldoc_app'

            # static: This app does no processing at all. Good for images
            static:
                $ref: 'static_app'

        # plugins: These are plugins that can add features and alter the
        # content of the site.
        plugins:
            link_check:
                $class: 'Statocles::Plugin::LinkCheck'

        # theme: The theme builds and manages the templates. Use themes to
        # change how your site looks.
        theme:
            $ref: 'theme'

        # index: The path to the page that should be used for the site index.
        index: '/page'

        # nav: These are lists of navigation links used by the theme.
        # Navigations are used to move between applications, or to go to
        # specific, important pages.
        #
        # The "main" nav is the primary navigation for the site. Every theme
        # should have this one.
        #
        # Each nav consists of an array of links. See the Statocles::Link class
        # for a list of attributes and what they mean. The most important are
        # "text", the text of the link, and "href", the URL to link to.
        nav:
            main:
                - text: 'Blog'
                  href: '/blog'

        data:
            toc:
                - title: 'The basics (syntax)'
                  number: 1
                  anchor: 'basics'
                  articles:
                    - {title: 'Hello world',         href: '/basics/hello/'}
                    - {title: 'Variables',           href: '/basics/variables/'}
                    - {title: 'References',          href: '/basics/references/'}
#                   - {title: 'Context',             href: '/basics/references/'}
                    - {title: 'Functions',           href: '/basics/functions/'}
                    - {title: 'Conditionals',        href: '/basics/flow/'}
                    - {title: 'Loops',               href: '/basics/loops/'}
                    - {title: 'Exceptions',          href: '/basics/exceptions/'}
                    - {title: 'Regular expressions', href: '/basics/regexps/'}
                    - {title: 'Files',               href: '/basics/files/'}
#                   - {title: 'Modules',             href: '/basics/modules/'}
#                   - {title: 'Comments and POD',    href: '/basics/pod/'}
#                   - {title: 'Scope',               href: '/basics/scope/'}
#                   - {title: 'Constants',           href: '/basics/constants/'}
                    - {title: 'Perl design goals',   href: '/basics/perl/'}
#                - title: 'The essentials (built in functions)'
#                  number: 1
#                  anchor: 'builtins'
#                  articles:
#                    - {title: 'Exceptions - die/eval',             href: '/builtins/eval/'}
#                    - {title: 'Exceptions - Syntax::Keyword::Try', href: '/builtins/syntax-keyword-try/'}
#                    - {title: 'File IO - open/close',              href: '/builtins/eval/'}
#                    - {title: 'File IO - Path::Tiny',              href: '/builtins/path-tiny/'}
#                    - {title: 'Working with lists',                href: '/builtins/lists/'}
#                    - {title: 'Working with hashes',               href: '/builtins/hashes/'}
                - title: 'Using libraries'
                  number: 2
                  anchor: 'dependencies'
                  articles:
                  articles:
                    - {title: 'Loading libraries',             href: '/dependencies/perl5lib/', toc_title: 'Loading libraries ($PERL5LIB)'}
                    - {title: 'Installing libraries',          href: '/dependencies/cpanm/',    toc_title: 'Installing libraries (cpanm)'}
                    - {title: 'Choosing libraries',            href: '/dependencies/metacpan/', toc_title: 'Choosing libraries (MetaCPAN)'}
                    - {title: 'Managing project dependencies', href: '/dependencies/carton/',   toc_title: 'Managing dependencies (Carton)'}
                    - {title: 'What version? Where?',          href: '/dependencies/pmtools/'}
#                - title: 'Recommended libraries'
#                  number: 1
#                  anchor: 'cpan'
#                  articles:
#                    - {title: 'Introduction',             href: '/cpan/intro/'}
#                    - {title: 'JSON',                     href: '/cpan/json/'}
#                    - {title: 'XML',                      href: '/cpan/xml/'}
#                    - {title: 'HTML',                     href: '/cpan/html/'}
#                    - {title: 'Web frameworks',           href: '/cpan/frameworks/'}
#                    - {title: 'Web deployment',           href: '/cpan/deployment/'}
                - title: 'Object oriented programming'
                  number: 3
                  anchor: 'oo'
                  articles:
                    - {title: 'The story of Perl OO', href: '/oo/story/'}
                    - {title: 'Classes and objects',  href: '/oo/classes/'}
                    - {title: 'Attributes',           href: '/oo/attributes/'}
                    - {title: 'Method modifiers',     href: '/oo/modifiers/'}
                    - {title: 'Roles',                href: '/oo/roles/'}
                    - {title: 'Inheritance',          href: '/oo/inheritance/'}
                - title: 'Debugging'
                  number: 4
                  anchor: 'debugging'
                  articles:
                    - {title: 'Examining data structures', href: '/debugging/data-printer/'}
                    - {title: 'Forcing stack traces',      href: '/debugging/stack-trace/'}
                - title: 'Testing'
                  number: 5
                  anchor: 'testing'
                  articles:
                    - {title: 'Introduction',                     href: '/testing/intro/'}
                    - {title: 'Warnings and exceptions',          href: '/testing/warnings/'}
                    - {title: 'Data structures',                  href: '/testing/data/'}
                    - {title: 'Mock objects',                     href: '/testing/mock/'}
                    - {title: 'Building your own test libraries', href: '/testing/libs/'}

        # deploy: This is the deploy object, used to deploy this site.
        deploy:
            $ref: 'deploy'

# theme: These are the settings for the theme.  See Statocles::Help::Theme for
# more information, and Statocles::Theme for a full list of attributes and what
# they do
theme:
    class: 'Statocles::Theme'
    args:
        # store: The store points to the directory where the theme's
        # templates are kept. Under-the-hood, this is a Statocles::Store
        # object.
        #
        # Themes have a special syntax to refer to themes that come bundled with
        # Statocles. See Statocles::Help::Theme for more information
        store: 'theme'

# deploy: These are the settings for the site's deploy. See Statocles::Deploy::File
# for a full list of attributes and what they do.
deploy:
    class: 'Statocles::Deploy::Git'
    args:
        branch: 'gh-pages'
        remote: 'gh-pages'

#----------------------------------------------------------------------------
# Applications
#----------------------------------------------------------------------------
#
# All applications have a "url_root" attribute, which is the root URL of the
# app. All the app's pages will be under this URL.
#
# Most applications have a "store" attribute. The store points to the directory
# where the application's data is kept. Under-the-hood, this is a
# Statocles::Store object, but you only need to specify the directory path.

# blog_app: These are the settings for the blog application.
blog_app:
    class: 'Statocles::App::Blog'
    args:
        url_root: '/blog'
        store: 'blog'

# page_app: These are the settings for the page application.
page_app:
    class: 'Statocles::App::Basic'
    args:
        store: 'page'
        url_root: '/'

# static_app: These are the settings for the static application.
static_app:
    class: 'Statocles::App::Basic'
    args:
        store: 'static'
        url_root: '/'

#perldoc_app:
#    class: 'Statocles::App::Perldoc'
#    args:
#        store: 'page'
#        url_root: '/perldoc'
#        template_dir: 'perldoc'
#        index_module: 'perl'
#        modules: 
#            - 'perlfunc'
#            - 'perlvar'
#            - 'perlop'
#        
